<?php

namespace app\models\medis;

use Yii;
use app\models\pegawai\TbPegawai;
use app\models\pendaftaran\Layanan;
/**
 * This is the model class for table "medis.lab_pk_order".
 *
 * @property int $id
 * @property string $no_transaksi generate by SP/TRIGGER
 * @property int $ird 1=>IRD;0=>BUKAN IRD
 * @property string $diagnosa
 * @property string $kondisi_sampel Cukup/Kurang/Beku/Lisis/Ikterik/Lipemik
 * @property string|null $catatan
 * @property string $created_at
 * @property int $created_by
 * @property string|null $updated_at
 * @property int|null $updated_by
 * @property string|null $log_data
 * @property int|null $is_deleted
 */
class LabPkOrder extends BaseModelAR
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'medis.lab_pk_order';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [[ 'ird', 'layanan_id','dokter_id', 'diagnosa'], 'required'],
            [['ird', 'layanan_id','dokter_id', 'created_by', 'updated_by', 'is_deleted'], 'default', 'value' => null],
            [['ird', 'layanan_id','dokter_id', 'created_by', 'updated_by', 'is_deleted'], 'integer'],
            [['diagnosa', 'catatan', 'log_data'], 'string'],
            [['created_at', 'updated_at'], 'safe'],
            [['no_transaksi'], 'string', 'max' => 20],
            [['kondisi_sampel'], 'string', 'max' => 255],
            [['no_transaksi'], 'unique'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'no_transaksi' => 'No.Transaksi',
            'ird' => 'Kirim Ke Unit IRD',
            'layanan_id' => 'Layanan',
            'dokter_id'=>'Dokter',
            'diagnosa' => 'Diagnosa',
            'kondisi_sampel' => 'Kondisi Sampel',
            'catatan' => 'Catatan',
            'created_at' => 'Created At',
            'created_by' => 'Created By',
            'updated_at' => 'Updated At',
            'updated_by' => 'Updated By',
            'log_data' => 'Log Data',
            'is_deleted' => 'Is Deleted',
        ];
    }
    public function beforeSave($insert) {
        if ($insert) {
            $this->is_deleted = 0;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    /**
     * {@inheritdoc}
     * @return LabPkOrderQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new LabPkOrderQuery(get_called_class());
    }
    public function getLabPkOrderDetail()
    {
        return $this->hasMany(LabPkOrderDetail::className(), ['lab_pk_order_id' => 'id']);
    }
    public function getDokter()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'dokter_id']);
    }
    public function getLayanan()
    {
        return $this->hasOne(Layanan::className(),['id'=>'layanan_id']);
    }
}
